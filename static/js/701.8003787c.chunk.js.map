{"version":3,"file":"static/js/701.8003787c.chunk.js","mappings":"+NACA,EAA4B,gCAA5B,EAAmE,2BAAnE,EAAsG,4BAAtG,EAA2I,6B,SCI5H,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,kBAEjDC,EAAAA,EAAAA,YAAU,WACJL,GACFM,MAAM,wEAEP,CAACN,IAEJ,IAAMO,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUd,EAAoB,EAApBA,KAAMe,EAAc,EAAdA,MACtC,OAAQf,GACN,IAAK,OACH,OAAOC,EAAQc,GACjB,IAAK,QACH,OAAOZ,EAASY,GAClB,IAAK,WACH,OAAOV,EAAYU,GACrB,QACE,SASN,OACE,iBAAKC,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,gCACA,kBAAMC,SARW,SAAAC,GACnBA,EAAEC,iBACFvB,EAASwB,EAAAA,EAAAA,SAAwB,CAAErB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,MAM9C,WACE,0BACE,mBAAOY,UAAWC,EAAlB,kBAEE,kBACEK,KAAK,OACLtB,KAAK,OACLe,MAAOf,EACPuB,SAAUV,EACVG,UAAWC,UAIjB,0BACE,mBAAOD,UAAWC,EAAlB,mBAEE,kBACEK,KAAK,QACLtB,KAAK,QACLe,MAAOb,EACPqB,SAAUV,EACVG,UAAWC,UAIjB,0BACE,mBAAOD,UAAWC,EAAlB,sBAEE,kBACEK,KAAK,WACLtB,KAAK,WACLe,MAAOX,EACPmB,SAAUV,EACVG,UAAWC,UAIjB,mBAAQK,KAAK,SAASN,UAAWC,EAAjC","sources":["webpack://react-homework-template/./src/Views/RegisterView/RegisterView.module.css?3f53","Views/RegisterView/RegisterView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"RegisterView_container__9Eh1J\",\"text\":\"RegisterView_text__Dx-21\",\"input\":\"RegisterView_input__6v3Ke\",\"button\":\"RegisterView_button__6KRZ-\",\"infotext\":\"RegisterView_infotext__q2wzv\"};","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport authOperations from '../../Redux/auth/auth-operations';\nimport s from '../RegisterView/RegisterView.module.css';\n\nexport default function RegisterView() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const regError = useSelector(state => state.auth.registerError)\n\n  useEffect(() => {\n    if (regError) {\n      alert('Please check your name and email, minimum length for password is 7');\n    }\n  }, [regError]);\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n  };\n\n  return (\n    <div className={s.container}>\n      <h1 className={s.text}>Registration Page</h1>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label className={s.text}>\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={handleChange}\n              className={s.input}\n            ></input>\n          </label>\n        </div>\n        <div>\n          <label className={s.text}>\n            Email\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={handleChange}\n              className={s.input}\n            ></input>\n          </label>\n        </div>\n        <div>\n          <label className={s.text}>\n            Password\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={handleChange}\n              className={s.input}\n            ></input>\n          </label>\n        </div>\n        <button type=\"submit\" className={s.button}>\n          Register\n        </button>\n      </form>\n    </div>\n  );\n}\n"],"names":["RegisterView","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","regError","useSelector","state","auth","registerError","useEffect","alert","handleChange","target","value","className","s","onSubmit","e","preventDefault","authOperations","type","onChange"],"sourceRoot":""}